/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.banda.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.banda.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.banda.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.banda.db.model.tables.records.BandaBannedPlayerRecord;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BandaBannedPlayer extends TableImpl<BandaBannedPlayerRecord> {

	private static final long serialVersionUID = -1070727106;

	/**
	 * The reference instance of <code>nucleus.banda_banned_player</code>
	 */
	public static final BandaBannedPlayer BANDA_BANNED_PLAYER = new BandaBannedPlayer();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BandaBannedPlayerRecord> getRecordType() {
		return BandaBannedPlayerRecord.class;
	}

	/**
	 * The column <code>nucleus.banda_banned_player.ban_id</code>.
	 */
	public final TableField<BandaBannedPlayerRecord, Long> BAN_ID = createField("ban_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.banda_banned_player.player_uuid</code>.
	 */
	public final TableField<BandaBannedPlayerRecord, UUID> PLAYER_UUID = createField("player_uuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * Create a <code>nucleus.banda_banned_player</code> table reference
	 */
	public BandaBannedPlayer() {
		this("banda_banned_player", null);
	}

	/**
	 * Create an aliased <code>nucleus.banda_banned_player</code> table reference
	 */
	public BandaBannedPlayer(String alias) {
		this(alias, BANDA_BANNED_PLAYER);
	}

	private BandaBannedPlayer(String alias, Table<BandaBannedPlayerRecord> aliased) {
		this(alias, aliased, null);
	}

	private BandaBannedPlayer(String alias, Table<BandaBannedPlayerRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BandaBannedPlayerRecord> getPrimaryKey() {
		return Keys.KEY_BANDA_BANNED_PLAYER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BandaBannedPlayerRecord>> getKeys() {
		return Arrays.<UniqueKey<BandaBannedPlayerRecord>>asList(Keys.KEY_BANDA_BANNED_PLAYER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BandaBannedPlayerRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BandaBannedPlayerRecord, ?>>asList(Keys.BANDA_BANNED_PLAYER_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BandaBannedPlayer as(String alias) {
		return new BandaBannedPlayer(alias, this);
	}

	/**
	 * Rename this table
	 */
	public BandaBannedPlayer rename(String name) {
		return new BandaBannedPlayer(name, null);
	}
}
